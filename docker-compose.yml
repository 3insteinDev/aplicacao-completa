version: "3"
services:
  database:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vr-projeto
    ports: 
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ../postgres_custom:/etc/postgresql  # Ajustado o caminho do volume
    entrypoint: /docker-entrypoint-initdb.d/init-db.sh   # Ajustado o caminho do script de inicialização

  vr-api:
    build: ../vr-api  # Ajustado o caminho do build
    container_name: vr_api
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - database
    environment:
      DATABASE_URL: postgresql://postgres:postgres@database:5432/vr-projeto

  vr-front:
    build: ../vr-front  # Ajustado o caminho do build
    container_name: vr_front
    restart: always
    ports:
      - "4200:4200"
    depends_on:
      - vr-api
    environment:
      API_URL: http://vr-api:8080

# Adicionando o volume persistente para o banco de dados
volumes:
  pg-data:

# Adicionando o script de inicialização para o banco de dados
# Este script será executado apenas uma vez durante a criação do contêiner do banco de dados
  database-init:
    image: postgres:latest
    volumes:
      - ../init-db.sh:/docker-entrypoint-initdb.d/init-db.sh  # Ajustado o caminho do script de inicialização
    depends_on:
      - database

# Comando para executar o script de inicialização após um atraso
command: >
    /bin/bash -c "sleep 5 && docker exec postgres_db /docker-entrypoint-initdb.d/init-db.sh"
